[[package]]
category = "dev"
description = "A configurable sidebar-enabled Sphinx theme"
name = "alabaster"
optional = false
python-versions = "*"
version = "0.7.12"

[[package]]
category = "dev"
description = "Atomic file writes."
marker = "sys_platform == \"win32\""
name = "atomicwrites"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.4.0"

[[package]]
category = "dev"
description = "Classes Without Boilerplate"
name = "attrs"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "20.3.0"

[package.extras]
dev = ["coverage (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "zope.interface", "furo", "sphinx", "pre-commit"]
docs = ["furo", "sphinx", "zope.interface"]
tests = ["coverage (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six", "zope.interface"]
tests_no_zope = ["coverage (>=5.0.2)", "hypothesis", "pympler", "pytest (>=4.3.0)", "six"]

[[package]]
category = "main"
description = "AWS signature version 4 signing process for the python requests module"
name = "aws-requests-auth"
optional = false
python-versions = "*"
version = "0.4.3"

[package.dependencies]
requests = ">=0.14.0"

[[package]]
category = "main"
description = "Universal Command Line Environment for AWS."
name = "awscli"
optional = false
python-versions = "*"
version = "1.18.199"

[package.dependencies]
botocore = "1.19.39"
docutils = ">=0.10,<0.16"
s3transfer = ">=0.3.0,<0.4.0"

[package.dependencies.PyYAML]
python = "<3.4.0 || >=3.5.0"
version = ">=3.10,<5.4"

[package.dependencies.colorama]
python = "<3.4.0 || >=3.5.0"
version = ">=0.2.5,<0.4.4"

[package.dependencies.rsa]
python = "<3.4.0 || >=3.5.0"
version = ">=3.1.2,<=4.5.0"

[[package]]
category = "dev"
description = "Internationalization utilities"
name = "babel"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "2.9.0"

[package.dependencies]
pytz = ">=2015.7"

[[package]]
category = "main"
description = "Screen-scraping library"
name = "beautifulsoup4"
optional = false
python-versions = "*"
version = "4.9.3"

[package.dependencies]
[package.dependencies.soupsieve]
python = ">=3.0"
version = ">1.2"

[package.extras]
html5lib = ["html5lib"]
lxml = ["lxml"]

[[package]]
category = "main"
description = "The AWS SDK for Python"
name = "boto3"
optional = false
python-versions = "*"
version = "1.16.39"

[package.dependencies]
botocore = ">=1.19.39,<1.20.0"
jmespath = ">=0.7.1,<1.0.0"
s3transfer = ">=0.3.0,<0.4.0"

[[package]]
category = "dev"
description = "Type annotations for boto3 1.16.39, generated by mypy-boto3-buider 4.2.0"
name = "boto3-stubs"
optional = false
python-versions = ">=3.6"
version = "1.16.39.0"

[package.dependencies]
[package.dependencies.typing-extensions]
python = "<3.8"
version = "*"

[package.extras]
accessanalyzer = ["mypy-boto3-accessanalyzer (1.16.39.0)"]
acm = ["mypy-boto3-acm (1.16.39.0)"]
acm-pca = ["mypy-boto3-acm-pca (1.16.39.0)"]
alexaforbusiness = ["mypy-boto3-alexaforbusiness (1.16.39.0)"]
all = ["mypy-boto3-accessanalyzer (1.16.39.0)", "mypy-boto3-acm (1.16.39.0)", "mypy-boto3-acm-pca (1.16.39.0)", "mypy-boto3-alexaforbusiness (1.16.39.0)", "mypy-boto3-amplify (1.16.39.0)", "mypy-boto3-amplifybackend (1.16.39.0)", "mypy-boto3-apigateway (1.16.39.0)", "mypy-boto3-apigatewaymanagementapi (1.16.39.0)", "mypy-boto3-apigatewayv2 (1.16.39.0)", "mypy-boto3-appconfig (1.16.39.0)", "mypy-boto3-appflow (1.16.39.0)", "mypy-boto3-appintegrations (1.16.39.0)", "mypy-boto3-application-autoscaling (1.16.39.0)", "mypy-boto3-application-insights (1.16.39.0)", "mypy-boto3-appmesh (1.16.39.0)", "mypy-boto3-appstream (1.16.39.0)", "mypy-boto3-appsync (1.16.39.0)", "mypy-boto3-athena (1.16.39.0)", "mypy-boto3-auditmanager (1.16.39.0)", "mypy-boto3-autoscaling (1.16.39.0)", "mypy-boto3-autoscaling-plans (1.16.39.0)", "mypy-boto3-backup (1.16.39.0)", "mypy-boto3-batch (1.16.39.0)", "mypy-boto3-braket (1.16.39.0)", "mypy-boto3-budgets (1.16.39.0)", "mypy-boto3-ce (1.16.39.0)", "mypy-boto3-chime (1.16.39.0)", "mypy-boto3-cloud9 (1.16.39.0)", "mypy-boto3-clouddirectory (1.16.39.0)", "mypy-boto3-cloudformation (1.16.39.0)", "mypy-boto3-cloudfront (1.16.39.0)", "mypy-boto3-cloudhsm (1.16.39.0)", "mypy-boto3-cloudhsmv2 (1.16.39.0)", "mypy-boto3-cloudsearch (1.16.39.0)", "mypy-boto3-cloudsearchdomain (1.16.39.0)", "mypy-boto3-cloudtrail (1.16.39.0)", "mypy-boto3-cloudwatch (1.16.39.0)", "mypy-boto3-codeartifact (1.16.39.0)", "mypy-boto3-codebuild (1.16.39.0)", "mypy-boto3-codecommit (1.16.39.0)", "mypy-boto3-codedeploy (1.16.39.0)", "mypy-boto3-codeguru-reviewer (1.16.39.0)", "mypy-boto3-codeguruprofiler (1.16.39.0)", "mypy-boto3-codepipeline (1.16.39.0)", "mypy-boto3-codestar (1.16.39.0)", "mypy-boto3-codestar-connections (1.16.39.0)", "mypy-boto3-codestar-notifications (1.16.39.0)", "mypy-boto3-cognito-identity (1.16.39.0)", "mypy-boto3-cognito-idp (1.16.39.0)", "mypy-boto3-cognito-sync (1.16.39.0)", "mypy-boto3-comprehend (1.16.39.0)", "mypy-boto3-comprehendmedical (1.16.39.0)", "mypy-boto3-compute-optimizer (1.16.39.0)", "mypy-boto3-config (1.16.39.0)", "mypy-boto3-connect (1.16.39.0)", "mypy-boto3-connect-contact-lens (1.16.39.0)", "mypy-boto3-connectparticipant (1.16.39.0)", "mypy-boto3-cur (1.16.39.0)", "mypy-boto3-customer-profiles (1.16.39.0)", "mypy-boto3-databrew (1.16.39.0)", "mypy-boto3-dataexchange (1.16.39.0)", "mypy-boto3-datapipeline (1.16.39.0)", "mypy-boto3-datasync (1.16.39.0)", "mypy-boto3-dax (1.16.39.0)", "mypy-boto3-detective (1.16.39.0)", "mypy-boto3-devicefarm (1.16.39.0)", "mypy-boto3-devops-guru (1.16.39.0)", "mypy-boto3-directconnect (1.16.39.0)", "mypy-boto3-discovery (1.16.39.0)", "mypy-boto3-dlm (1.16.39.0)", "mypy-boto3-dms (1.16.39.0)", "mypy-boto3-docdb (1.16.39.0)", "mypy-boto3-ds (1.16.39.0)", "mypy-boto3-dynamodb (1.16.39.0)", "mypy-boto3-dynamodbstreams (1.16.39.0)", "mypy-boto3-ebs (1.16.39.0)", "mypy-boto3-ec2 (1.16.39.0)", "mypy-boto3-ec2-instance-connect (1.16.39.0)", "mypy-boto3-ecr (1.16.39.0)", "mypy-boto3-ecr-public (1.16.39.0)", "mypy-boto3-ecs (1.16.39.0)", "mypy-boto3-efs (1.16.39.0)", "mypy-boto3-eks (1.16.39.0)", "mypy-boto3-elastic-inference (1.16.39.0)", "mypy-boto3-elasticache (1.16.39.0)", "mypy-boto3-elasticbeanstalk (1.16.39.0)", "mypy-boto3-elastictranscoder (1.16.39.0)", "mypy-boto3-elb (1.16.39.0)", "mypy-boto3-elbv2 (1.16.39.0)", "mypy-boto3-emr (1.16.39.0)", "mypy-boto3-emr-containers (1.16.39.0)", "mypy-boto3-es (1.16.39.0)", "mypy-boto3-events (1.16.39.0)", "mypy-boto3-firehose (1.16.39.0)", "mypy-boto3-fms (1.16.39.0)", "mypy-boto3-forecast (1.16.39.0)", "mypy-boto3-forecastquery (1.16.39.0)", "mypy-boto3-frauddetector (1.16.39.0)", "mypy-boto3-fsx (1.16.39.0)", "mypy-boto3-gamelift (1.16.39.0)", "mypy-boto3-glacier (1.16.39.0)", "mypy-boto3-globalaccelerator (1.16.39.0)", "mypy-boto3-glue (1.16.39.0)", "mypy-boto3-greengrass (1.16.39.0)", "mypy-boto3-groundstation (1.16.39.0)", "mypy-boto3-guardduty (1.16.39.0)", "mypy-boto3-health (1.16.39.0)", "mypy-boto3-healthlake (1.16.39.0)", "mypy-boto3-honeycode (1.16.39.0)", "mypy-boto3-iam (1.16.39.0)", "mypy-boto3-identitystore (1.16.39.0)", "mypy-boto3-imagebuilder (1.16.39.0)", "mypy-boto3-importexport (1.16.39.0)", "mypy-boto3-inspector (1.16.39.0)", "mypy-boto3-iot (1.16.39.0)", "mypy-boto3-iot-data (1.16.39.0)", "mypy-boto3-iot-jobs-data (1.16.39.0)", "mypy-boto3-iot1click-devices (1.16.39.0)", "mypy-boto3-iot1click-projects (1.16.39.0)", "mypy-boto3-iotanalytics (1.16.39.0)", "mypy-boto3-iotevents (1.16.39.0)", "mypy-boto3-iotevents-data (1.16.39.0)", "mypy-boto3-iotsecuretunneling (1.16.39.0)", "mypy-boto3-iotsitewise (1.16.39.0)", "mypy-boto3-iotthingsgraph (1.16.39.0)", "mypy-boto3-ivs (1.16.39.0)", "mypy-boto3-kafka (1.16.39.0)", "mypy-boto3-kendra (1.16.39.0)", "mypy-boto3-kinesis (1.16.39.0)", "mypy-boto3-kinesis-video-archived-media (1.16.39.0)", "mypy-boto3-kinesis-video-media (1.16.39.0)", "mypy-boto3-kinesis-video-signaling (1.16.39.0)", "mypy-boto3-kinesisanalytics (1.16.39.0)", "mypy-boto3-kinesisanalyticsv2 (1.16.39.0)", "mypy-boto3-kinesisvideo (1.16.39.0)", "mypy-boto3-kms (1.16.39.0)", "mypy-boto3-lakeformation (1.16.39.0)", "mypy-boto3-lambda (1.16.39.0)", "mypy-boto3-lex-models (1.16.39.0)", "mypy-boto3-lex-runtime (1.16.39.0)", "mypy-boto3-license-manager (1.16.39.0)", "mypy-boto3-lightsail (1.16.39.0)", "mypy-boto3-logs (1.16.39.0)", "mypy-boto3-lookoutvision (1.16.39.0)", "mypy-boto3-machinelearning (1.16.39.0)", "mypy-boto3-macie (1.16.39.0)", "mypy-boto3-macie2 (1.16.39.0)", "mypy-boto3-managedblockchain (1.16.39.0)", "mypy-boto3-marketplace-catalog (1.16.39.0)", "mypy-boto3-marketplace-entitlement (1.16.39.0)", "mypy-boto3-marketplacecommerceanalytics (1.16.39.0)", "mypy-boto3-mediaconnect (1.16.39.0)", "mypy-boto3-mediaconvert (1.16.39.0)", "mypy-boto3-medialive (1.16.39.0)", "mypy-boto3-mediapackage (1.16.39.0)", "mypy-boto3-mediapackage-vod (1.16.39.0)", "mypy-boto3-mediastore (1.16.39.0)", "mypy-boto3-mediastore-data (1.16.39.0)", "mypy-boto3-mediatailor (1.16.39.0)", "mypy-boto3-meteringmarketplace (1.16.39.0)", "mypy-boto3-mgh (1.16.39.0)", "mypy-boto3-migrationhub-config (1.16.39.0)", "mypy-boto3-mobile (1.16.39.0)", "mypy-boto3-mq (1.16.39.0)", "mypy-boto3-mturk (1.16.39.0)", "mypy-boto3-mwaa (1.16.39.0)", "mypy-boto3-neptune (1.16.39.0)", "mypy-boto3-network-firewall (1.16.39.0)", "mypy-boto3-networkmanager (1.16.39.0)", "mypy-boto3-opsworks (1.16.39.0)", "mypy-boto3-opsworkscm (1.16.39.0)", "mypy-boto3-organizations (1.16.39.0)", "mypy-boto3-outposts (1.16.39.0)", "mypy-boto3-personalize (1.16.39.0)", "mypy-boto3-personalize-events (1.16.39.0)", "mypy-boto3-personalize-runtime (1.16.39.0)", "mypy-boto3-pi (1.16.39.0)", "mypy-boto3-pinpoint (1.16.39.0)", "mypy-boto3-pinpoint-email (1.16.39.0)", "mypy-boto3-pinpoint-sms-voice (1.16.39.0)", "mypy-boto3-polly (1.16.39.0)", "mypy-boto3-pricing (1.16.39.0)", "mypy-boto3-qldb (1.16.39.0)", "mypy-boto3-qldb-session (1.16.39.0)", "mypy-boto3-quicksight (1.16.39.0)", "mypy-boto3-ram (1.16.39.0)", "mypy-boto3-rds (1.16.39.0)", "mypy-boto3-rds-data (1.16.39.0)", "mypy-boto3-redshift (1.16.39.0)", "mypy-boto3-redshift-data (1.16.39.0)", "mypy-boto3-rekognition (1.16.39.0)", "mypy-boto3-resource-groups (1.16.39.0)", "mypy-boto3-resourcegroupstaggingapi (1.16.39.0)", "mypy-boto3-robomaker (1.16.39.0)", "mypy-boto3-route53 (1.16.39.0)", "mypy-boto3-route53domains (1.16.39.0)", "mypy-boto3-route53resolver (1.16.39.0)", "mypy-boto3-s3 (1.16.39.0)", "mypy-boto3-s3control (1.16.39.0)", "mypy-boto3-s3outposts (1.16.39.0)", "mypy-boto3-sagemaker (1.16.39.0)", "mypy-boto3-sagemaker-a2i-runtime (1.16.39.0)", "mypy-boto3-sagemaker-edge (1.16.39.0)", "mypy-boto3-sagemaker-featurestore-runtime (1.16.39.0)", "mypy-boto3-sagemaker-runtime (1.16.39.0)", "mypy-boto3-savingsplans (1.16.39.0)", "mypy-boto3-schemas (1.16.39.0)", "mypy-boto3-sdb (1.16.39.0)", "mypy-boto3-secretsmanager (1.16.39.0)", "mypy-boto3-securityhub (1.16.39.0)", "mypy-boto3-serverlessrepo (1.16.39.0)", "mypy-boto3-service-quotas (1.16.39.0)", "mypy-boto3-servicecatalog (1.16.39.0)", "mypy-boto3-servicecatalog-appregistry (1.16.39.0)", "mypy-boto3-servicediscovery (1.16.39.0)", "mypy-boto3-ses (1.16.39.0)", "mypy-boto3-sesv2 (1.16.39.0)", "mypy-boto3-shield (1.16.39.0)", "mypy-boto3-signer (1.16.39.0)", "mypy-boto3-sms (1.16.39.0)", "mypy-boto3-sms-voice (1.16.39.0)", "mypy-boto3-snowball (1.16.39.0)", "mypy-boto3-sns (1.16.39.0)", "mypy-boto3-sqs (1.16.39.0)", "mypy-boto3-ssm (1.16.39.0)", "mypy-boto3-sso (1.16.39.0)", "mypy-boto3-sso-admin (1.16.39.0)", "mypy-boto3-sso-oidc (1.16.39.0)", "mypy-boto3-stepfunctions (1.16.39.0)", "mypy-boto3-storagegateway (1.16.39.0)", "mypy-boto3-sts (1.16.39.0)", "mypy-boto3-support (1.16.39.0)", "mypy-boto3-swf (1.16.39.0)", "mypy-boto3-synthetics (1.16.39.0)", "mypy-boto3-textract (1.16.39.0)", "mypy-boto3-timestream-query (1.16.39.0)", "mypy-boto3-timestream-write (1.16.39.0)", "mypy-boto3-transcribe (1.16.39.0)", "mypy-boto3-transfer (1.16.39.0)", "mypy-boto3-translate (1.16.39.0)", "mypy-boto3-waf (1.16.39.0)", "mypy-boto3-waf-regional (1.16.39.0)", "mypy-boto3-wafv2 (1.16.39.0)", "mypy-boto3-workdocs (1.16.39.0)", "mypy-boto3-worklink (1.16.39.0)", "mypy-boto3-workmail (1.16.39.0)", "mypy-boto3-workmailmessageflow (1.16.39.0)", "mypy-boto3-workspaces (1.16.39.0)", "mypy-boto3-xray (1.16.39.0)"]
amplify = ["mypy-boto3-amplify (1.16.39.0)"]
amplifybackend = ["mypy-boto3-amplifybackend (1.16.39.0)"]
apigateway = ["mypy-boto3-apigateway (1.16.39.0)"]
apigatewaymanagementapi = ["mypy-boto3-apigatewaymanagementapi (1.16.39.0)"]
apigatewayv2 = ["mypy-boto3-apigatewayv2 (1.16.39.0)"]
appconfig = ["mypy-boto3-appconfig (1.16.39.0)"]
appflow = ["mypy-boto3-appflow (1.16.39.0)"]
appintegrations = ["mypy-boto3-appintegrations (1.16.39.0)"]
application-autoscaling = ["mypy-boto3-application-autoscaling (1.16.39.0)"]
application-insights = ["mypy-boto3-application-insights (1.16.39.0)"]
appmesh = ["mypy-boto3-appmesh (1.16.39.0)"]
appstream = ["mypy-boto3-appstream (1.16.39.0)"]
appsync = ["mypy-boto3-appsync (1.16.39.0)"]
athena = ["mypy-boto3-athena (1.16.39.0)"]
auditmanager = ["mypy-boto3-auditmanager (1.16.39.0)"]
autoscaling = ["mypy-boto3-autoscaling (1.16.39.0)"]
autoscaling-plans = ["mypy-boto3-autoscaling-plans (1.16.39.0)"]
backup = ["mypy-boto3-backup (1.16.39.0)"]
batch = ["mypy-boto3-batch (1.16.39.0)"]
braket = ["mypy-boto3-braket (1.16.39.0)"]
budgets = ["mypy-boto3-budgets (1.16.39.0)"]
ce = ["mypy-boto3-ce (1.16.39.0)"]
chime = ["mypy-boto3-chime (1.16.39.0)"]
cloud9 = ["mypy-boto3-cloud9 (1.16.39.0)"]
clouddirectory = ["mypy-boto3-clouddirectory (1.16.39.0)"]
cloudformation = ["mypy-boto3-cloudformation (1.16.39.0)"]
cloudfront = ["mypy-boto3-cloudfront (1.16.39.0)"]
cloudhsm = ["mypy-boto3-cloudhsm (1.16.39.0)"]
cloudhsmv2 = ["mypy-boto3-cloudhsmv2 (1.16.39.0)"]
cloudsearch = ["mypy-boto3-cloudsearch (1.16.39.0)"]
cloudsearchdomain = ["mypy-boto3-cloudsearchdomain (1.16.39.0)"]
cloudtrail = ["mypy-boto3-cloudtrail (1.16.39.0)"]
cloudwatch = ["mypy-boto3-cloudwatch (1.16.39.0)"]
codeartifact = ["mypy-boto3-codeartifact (1.16.39.0)"]
codebuild = ["mypy-boto3-codebuild (1.16.39.0)"]
codecommit = ["mypy-boto3-codecommit (1.16.39.0)"]
codedeploy = ["mypy-boto3-codedeploy (1.16.39.0)"]
codeguru-reviewer = ["mypy-boto3-codeguru-reviewer (1.16.39.0)"]
codeguruprofiler = ["mypy-boto3-codeguruprofiler (1.16.39.0)"]
codepipeline = ["mypy-boto3-codepipeline (1.16.39.0)"]
codestar = ["mypy-boto3-codestar (1.16.39.0)"]
codestar-connections = ["mypy-boto3-codestar-connections (1.16.39.0)"]
codestar-notifications = ["mypy-boto3-codestar-notifications (1.16.39.0)"]
cognito-identity = ["mypy-boto3-cognito-identity (1.16.39.0)"]
cognito-idp = ["mypy-boto3-cognito-idp (1.16.39.0)"]
cognito-sync = ["mypy-boto3-cognito-sync (1.16.39.0)"]
comprehend = ["mypy-boto3-comprehend (1.16.39.0)"]
comprehendmedical = ["mypy-boto3-comprehendmedical (1.16.39.0)"]
compute-optimizer = ["mypy-boto3-compute-optimizer (1.16.39.0)"]
config = ["mypy-boto3-config (1.16.39.0)"]
connect = ["mypy-boto3-connect (1.16.39.0)"]
connect-contact-lens = ["mypy-boto3-connect-contact-lens (1.16.39.0)"]
connectparticipant = ["mypy-boto3-connectparticipant (1.16.39.0)"]
cur = ["mypy-boto3-cur (1.16.39.0)"]
customer-profiles = ["mypy-boto3-customer-profiles (1.16.39.0)"]
databrew = ["mypy-boto3-databrew (1.16.39.0)"]
dataexchange = ["mypy-boto3-dataexchange (1.16.39.0)"]
datapipeline = ["mypy-boto3-datapipeline (1.16.39.0)"]
datasync = ["mypy-boto3-datasync (1.16.39.0)"]
dax = ["mypy-boto3-dax (1.16.39.0)"]
detective = ["mypy-boto3-detective (1.16.39.0)"]
devicefarm = ["mypy-boto3-devicefarm (1.16.39.0)"]
devops-guru = ["mypy-boto3-devops-guru (1.16.39.0)"]
directconnect = ["mypy-boto3-directconnect (1.16.39.0)"]
discovery = ["mypy-boto3-discovery (1.16.39.0)"]
dlm = ["mypy-boto3-dlm (1.16.39.0)"]
dms = ["mypy-boto3-dms (1.16.39.0)"]
docdb = ["mypy-boto3-docdb (1.16.39.0)"]
ds = ["mypy-boto3-ds (1.16.39.0)"]
dynamodb = ["mypy-boto3-dynamodb (1.16.39.0)"]
dynamodbstreams = ["mypy-boto3-dynamodbstreams (1.16.39.0)"]
ebs = ["mypy-boto3-ebs (1.16.39.0)"]
ec2 = ["mypy-boto3-ec2 (1.16.39.0)"]
ec2-instance-connect = ["mypy-boto3-ec2-instance-connect (1.16.39.0)"]
ecr = ["mypy-boto3-ecr (1.16.39.0)"]
ecr-public = ["mypy-boto3-ecr-public (1.16.39.0)"]
ecs = ["mypy-boto3-ecs (1.16.39.0)"]
efs = ["mypy-boto3-efs (1.16.39.0)"]
eks = ["mypy-boto3-eks (1.16.39.0)"]
elastic-inference = ["mypy-boto3-elastic-inference (1.16.39.0)"]
elasticache = ["mypy-boto3-elasticache (1.16.39.0)"]
elasticbeanstalk = ["mypy-boto3-elasticbeanstalk (1.16.39.0)"]
elastictranscoder = ["mypy-boto3-elastictranscoder (1.16.39.0)"]
elb = ["mypy-boto3-elb (1.16.39.0)"]
elbv2 = ["mypy-boto3-elbv2 (1.16.39.0)"]
emr = ["mypy-boto3-emr (1.16.39.0)"]
emr-containers = ["mypy-boto3-emr-containers (1.16.39.0)"]
es = ["mypy-boto3-es (1.16.39.0)"]
essential = ["mypy-boto3-cloudformation (1.16.39.0)", "mypy-boto3-dynamodb (1.16.39.0)", "mypy-boto3-ec2 (1.16.39.0)", "mypy-boto3-lambda (1.16.39.0)", "mypy-boto3-rds (1.16.39.0)", "mypy-boto3-s3 (1.16.39.0)", "mypy-boto3-sqs (1.16.39.0)"]
events = ["mypy-boto3-events (1.16.39.0)"]
firehose = ["mypy-boto3-firehose (1.16.39.0)"]
fms = ["mypy-boto3-fms (1.16.39.0)"]
forecast = ["mypy-boto3-forecast (1.16.39.0)"]
forecastquery = ["mypy-boto3-forecastquery (1.16.39.0)"]
frauddetector = ["mypy-boto3-frauddetector (1.16.39.0)"]
fsx = ["mypy-boto3-fsx (1.16.39.0)"]
gamelift = ["mypy-boto3-gamelift (1.16.39.0)"]
glacier = ["mypy-boto3-glacier (1.16.39.0)"]
globalaccelerator = ["mypy-boto3-globalaccelerator (1.16.39.0)"]
glue = ["mypy-boto3-glue (1.16.39.0)"]
greengrass = ["mypy-boto3-greengrass (1.16.39.0)"]
groundstation = ["mypy-boto3-groundstation (1.16.39.0)"]
guardduty = ["mypy-boto3-guardduty (1.16.39.0)"]
health = ["mypy-boto3-health (1.16.39.0)"]
healthlake = ["mypy-boto3-healthlake (1.16.39.0)"]
honeycode = ["mypy-boto3-honeycode (1.16.39.0)"]
iam = ["mypy-boto3-iam (1.16.39.0)"]
identitystore = ["mypy-boto3-identitystore (1.16.39.0)"]
imagebuilder = ["mypy-boto3-imagebuilder (1.16.39.0)"]
importexport = ["mypy-boto3-importexport (1.16.39.0)"]
inspector = ["mypy-boto3-inspector (1.16.39.0)"]
iot = ["mypy-boto3-iot (1.16.39.0)"]
iot-data = ["mypy-boto3-iot-data (1.16.39.0)"]
iot-jobs-data = ["mypy-boto3-iot-jobs-data (1.16.39.0)"]
iot1click-devices = ["mypy-boto3-iot1click-devices (1.16.39.0)"]
iot1click-projects = ["mypy-boto3-iot1click-projects (1.16.39.0)"]
iotanalytics = ["mypy-boto3-iotanalytics (1.16.39.0)"]
iotevents = ["mypy-boto3-iotevents (1.16.39.0)"]
iotevents-data = ["mypy-boto3-iotevents-data (1.16.39.0)"]
iotsecuretunneling = ["mypy-boto3-iotsecuretunneling (1.16.39.0)"]
iotsitewise = ["mypy-boto3-iotsitewise (1.16.39.0)"]
iotthingsgraph = ["mypy-boto3-iotthingsgraph (1.16.39.0)"]
ivs = ["mypy-boto3-ivs (1.16.39.0)"]
kafka = ["mypy-boto3-kafka (1.16.39.0)"]
kendra = ["mypy-boto3-kendra (1.16.39.0)"]
kinesis = ["mypy-boto3-kinesis (1.16.39.0)"]
kinesis-video-archived-media = ["mypy-boto3-kinesis-video-archived-media (1.16.39.0)"]
kinesis-video-media = ["mypy-boto3-kinesis-video-media (1.16.39.0)"]
kinesis-video-signaling = ["mypy-boto3-kinesis-video-signaling (1.16.39.0)"]
kinesisanalytics = ["mypy-boto3-kinesisanalytics (1.16.39.0)"]
kinesisanalyticsv2 = ["mypy-boto3-kinesisanalyticsv2 (1.16.39.0)"]
kinesisvideo = ["mypy-boto3-kinesisvideo (1.16.39.0)"]
kms = ["mypy-boto3-kms (1.16.39.0)"]
lakeformation = ["mypy-boto3-lakeformation (1.16.39.0)"]
lambda = ["mypy-boto3-lambda (1.16.39.0)"]
lex-models = ["mypy-boto3-lex-models (1.16.39.0)"]
lex-runtime = ["mypy-boto3-lex-runtime (1.16.39.0)"]
license-manager = ["mypy-boto3-license-manager (1.16.39.0)"]
lightsail = ["mypy-boto3-lightsail (1.16.39.0)"]
logs = ["mypy-boto3-logs (1.16.39.0)"]
lookoutvision = ["mypy-boto3-lookoutvision (1.16.39.0)"]
machinelearning = ["mypy-boto3-machinelearning (1.16.39.0)"]
macie = ["mypy-boto3-macie (1.16.39.0)"]
macie2 = ["mypy-boto3-macie2 (1.16.39.0)"]
managedblockchain = ["mypy-boto3-managedblockchain (1.16.39.0)"]
marketplace-catalog = ["mypy-boto3-marketplace-catalog (1.16.39.0)"]
marketplace-entitlement = ["mypy-boto3-marketplace-entitlement (1.16.39.0)"]
marketplacecommerceanalytics = ["mypy-boto3-marketplacecommerceanalytics (1.16.39.0)"]
mediaconnect = ["mypy-boto3-mediaconnect (1.16.39.0)"]
mediaconvert = ["mypy-boto3-mediaconvert (1.16.39.0)"]
medialive = ["mypy-boto3-medialive (1.16.39.0)"]
mediapackage = ["mypy-boto3-mediapackage (1.16.39.0)"]
mediapackage-vod = ["mypy-boto3-mediapackage-vod (1.16.39.0)"]
mediastore = ["mypy-boto3-mediastore (1.16.39.0)"]
mediastore-data = ["mypy-boto3-mediastore-data (1.16.39.0)"]
mediatailor = ["mypy-boto3-mediatailor (1.16.39.0)"]
meteringmarketplace = ["mypy-boto3-meteringmarketplace (1.16.39.0)"]
mgh = ["mypy-boto3-mgh (1.16.39.0)"]
migrationhub-config = ["mypy-boto3-migrationhub-config (1.16.39.0)"]
mobile = ["mypy-boto3-mobile (1.16.39.0)"]
mq = ["mypy-boto3-mq (1.16.39.0)"]
mturk = ["mypy-boto3-mturk (1.16.39.0)"]
mwaa = ["mypy-boto3-mwaa (1.16.39.0)"]
neptune = ["mypy-boto3-neptune (1.16.39.0)"]
network-firewall = ["mypy-boto3-network-firewall (1.16.39.0)"]
networkmanager = ["mypy-boto3-networkmanager (1.16.39.0)"]
opsworks = ["mypy-boto3-opsworks (1.16.39.0)"]
opsworkscm = ["mypy-boto3-opsworkscm (1.16.39.0)"]
organizations = ["mypy-boto3-organizations (1.16.39.0)"]
outposts = ["mypy-boto3-outposts (1.16.39.0)"]
personalize = ["mypy-boto3-personalize (1.16.39.0)"]
personalize-events = ["mypy-boto3-personalize-events (1.16.39.0)"]
personalize-runtime = ["mypy-boto3-personalize-runtime (1.16.39.0)"]
pi = ["mypy-boto3-pi (1.16.39.0)"]
pinpoint = ["mypy-boto3-pinpoint (1.16.39.0)"]
pinpoint-email = ["mypy-boto3-pinpoint-email (1.16.39.0)"]
pinpoint-sms-voice = ["mypy-boto3-pinpoint-sms-voice (1.16.39.0)"]
polly = ["mypy-boto3-polly (1.16.39.0)"]
pricing = ["mypy-boto3-pricing (1.16.39.0)"]
qldb = ["mypy-boto3-qldb (1.16.39.0)"]
qldb-session = ["mypy-boto3-qldb-session (1.16.39.0)"]
quicksight = ["mypy-boto3-quicksight (1.16.39.0)"]
ram = ["mypy-boto3-ram (1.16.39.0)"]
rds = ["mypy-boto3-rds (1.16.39.0)"]
rds-data = ["mypy-boto3-rds-data (1.16.39.0)"]
redshift = ["mypy-boto3-redshift (1.16.39.0)"]
redshift-data = ["mypy-boto3-redshift-data (1.16.39.0)"]
rekognition = ["mypy-boto3-rekognition (1.16.39.0)"]
resource-groups = ["mypy-boto3-resource-groups (1.16.39.0)"]
resourcegroupstaggingapi = ["mypy-boto3-resourcegroupstaggingapi (1.16.39.0)"]
robomaker = ["mypy-boto3-robomaker (1.16.39.0)"]
route53 = ["mypy-boto3-route53 (1.16.39.0)"]
route53domains = ["mypy-boto3-route53domains (1.16.39.0)"]
route53resolver = ["mypy-boto3-route53resolver (1.16.39.0)"]
s3 = ["mypy-boto3-s3 (1.16.39.0)"]
s3control = ["mypy-boto3-s3control (1.16.39.0)"]
s3outposts = ["mypy-boto3-s3outposts (1.16.39.0)"]
sagemaker = ["mypy-boto3-sagemaker (1.16.39.0)"]
sagemaker-a2i-runtime = ["mypy-boto3-sagemaker-a2i-runtime (1.16.39.0)"]
sagemaker-edge = ["mypy-boto3-sagemaker-edge (1.16.39.0)"]
sagemaker-featurestore-runtime = ["mypy-boto3-sagemaker-featurestore-runtime (1.16.39.0)"]
sagemaker-runtime = ["mypy-boto3-sagemaker-runtime (1.16.39.0)"]
savingsplans = ["mypy-boto3-savingsplans (1.16.39.0)"]
schemas = ["mypy-boto3-schemas (1.16.39.0)"]
sdb = ["mypy-boto3-sdb (1.16.39.0)"]
secretsmanager = ["mypy-boto3-secretsmanager (1.16.39.0)"]
securityhub = ["mypy-boto3-securityhub (1.16.39.0)"]
serverlessrepo = ["mypy-boto3-serverlessrepo (1.16.39.0)"]
service-quotas = ["mypy-boto3-service-quotas (1.16.39.0)"]
servicecatalog = ["mypy-boto3-servicecatalog (1.16.39.0)"]
servicecatalog-appregistry = ["mypy-boto3-servicecatalog-appregistry (1.16.39.0)"]
servicediscovery = ["mypy-boto3-servicediscovery (1.16.39.0)"]
ses = ["mypy-boto3-ses (1.16.39.0)"]
sesv2 = ["mypy-boto3-sesv2 (1.16.39.0)"]
shield = ["mypy-boto3-shield (1.16.39.0)"]
signer = ["mypy-boto3-signer (1.16.39.0)"]
sms = ["mypy-boto3-sms (1.16.39.0)"]
sms-voice = ["mypy-boto3-sms-voice (1.16.39.0)"]
snowball = ["mypy-boto3-snowball (1.16.39.0)"]
sns = ["mypy-boto3-sns (1.16.39.0)"]
sqs = ["mypy-boto3-sqs (1.16.39.0)"]
ssm = ["mypy-boto3-ssm (1.16.39.0)"]
sso = ["mypy-boto3-sso (1.16.39.0)"]
sso-admin = ["mypy-boto3-sso-admin (1.16.39.0)"]
sso-oidc = ["mypy-boto3-sso-oidc (1.16.39.0)"]
stepfunctions = ["mypy-boto3-stepfunctions (1.16.39.0)"]
storagegateway = ["mypy-boto3-storagegateway (1.16.39.0)"]
sts = ["mypy-boto3-sts (1.16.39.0)"]
support = ["mypy-boto3-support (1.16.39.0)"]
swf = ["mypy-boto3-swf (1.16.39.0)"]
synthetics = ["mypy-boto3-synthetics (1.16.39.0)"]
textract = ["mypy-boto3-textract (1.16.39.0)"]
timestream-query = ["mypy-boto3-timestream-query (1.16.39.0)"]
timestream-write = ["mypy-boto3-timestream-write (1.16.39.0)"]
transcribe = ["mypy-boto3-transcribe (1.16.39.0)"]
transfer = ["mypy-boto3-transfer (1.16.39.0)"]
translate = ["mypy-boto3-translate (1.16.39.0)"]
waf = ["mypy-boto3-waf (1.16.39.0)"]
waf-regional = ["mypy-boto3-waf-regional (1.16.39.0)"]
wafv2 = ["mypy-boto3-wafv2 (1.16.39.0)"]
workdocs = ["mypy-boto3-workdocs (1.16.39.0)"]
worklink = ["mypy-boto3-worklink (1.16.39.0)"]
workmail = ["mypy-boto3-workmail (1.16.39.0)"]
workmailmessageflow = ["mypy-boto3-workmailmessageflow (1.16.39.0)"]
workspaces = ["mypy-boto3-workspaces (1.16.39.0)"]
xray = ["mypy-boto3-xray (1.16.39.0)"]

[[package]]
category = "main"
description = "Low-level, data-driven core of boto 3."
name = "botocore"
optional = false
python-versions = "*"
version = "1.19.39"

[package.dependencies]
jmespath = ">=0.7.1,<1.0.0"
python-dateutil = ">=2.1,<3.0.0"

[package.dependencies.urllib3]
python = "<3.4.0 || >=3.5.0"
version = ">=1.25.4,<1.27"

[[package]]
category = "main"
description = "Python package for providing Mozilla's CA Bundle."
name = "certifi"
optional = false
python-versions = "*"
version = "2020.12.5"

[[package]]
category = "main"
description = "Universal encoding detector for Python 2 and 3"
name = "chardet"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "4.0.0"

[[package]]
category = "dev"
description = "Codacy coverage reporter for Python"
name = "codacy-coverage"
optional = false
python-versions = "*"
version = "1.3.11"

[package.dependencies]
requests = ">=2.9.1"

[package.extras]
dev = ["check-manifest"]
test = ["coverage", "nosetests"]

[[package]]
category = "main"
description = "Cross-platform colored terminal text."
marker = "python_version != \"3.4\" or sys_platform == \"win32\""
name = "colorama"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "0.4.3"

[[package]]
category = "dev"
description = "Code coverage measurement for Python"
name = "coverage"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"
version = "5.3"

[package.extras]
toml = ["toml"]

[[package]]
category = "dev"
description = "Show coverage stats online via coveralls.io"
name = "coveralls"
optional = false
python-versions = ">= 3.5"
version = "2.2.0"

[package.dependencies]
coverage = ">=4.1,<6.0"
docopt = ">=0.6.1"
requests = ">=1.0.0"

[package.extras]
yaml = ["PyYAML (>=3.10)"]

[[package]]
category = "main"
description = "Utility package for interacting with the 4DN Data Portal and other 4DN resources"
name = "dcicutils"
optional = false
python-versions = ">=3.4,<3.8"
version = "1.8.1"

[package.dependencies]
aws-requests-auth = ">=0.4.2,<1"
boto3 = ">=1.10.46,<2.0.0"
botocore = ">=1.13.46,<2.0.0"
elasticsearch = "6.8.1"
gitpython = ">=3.1.2,<4.0.0"
pytz = ">=2016.4"
requests = ">=2.21.0,<3.0.0"
structlog = ">=19.2.0,<20.0.0"
toml = ">=0.10.0,<1"
urllib3 = ">=1.24.3,<2.0.0"
webtest = ">=2.0.34,<3.0.0"

[[package]]
category = "dev"
description = "Pythonic argument parser, that will make you smile"
name = "docopt"
optional = false
python-versions = "*"
version = "0.6.2"

[[package]]
category = "main"
description = "Docutils -- Python Documentation Utilities"
name = "docutils"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "0.15.2"

[[package]]
category = "main"
description = "Python client for Elasticsearch"
name = "elasticsearch"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, <4"
version = "6.8.1"

[package.dependencies]
urllib3 = ">=1.21.1"

[package.extras]
develop = ["requests (>=2.0.0,<3.0.0)", "nose", "coverage", "mock", "pyyaml", "nosexcover", "numpy", "pandas", "sphinx (<1.7)", "sphinx-rtd-theme"]
requests = ["requests (>=2.4.0,<3.0.0)"]

[[package]]
category = "dev"
description = "the modular source code checker: pep8 pyflakes and co"
name = "flake8"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"
version = "3.8.4"

[package.dependencies]
mccabe = ">=0.6.0,<0.7.0"
pycodestyle = ">=2.6.0a1,<2.7.0"
pyflakes = ">=2.2.0,<2.3.0"

[package.dependencies.importlib-metadata]
python = "<3.8"
version = "*"

[[package]]
category = "main"
description = "Git Object Database"
name = "gitdb"
optional = false
python-versions = ">=3.4"
version = "4.0.5"

[package.dependencies]
smmap = ">=3.0.1,<4"

[[package]]
category = "main"
description = "Python Git Library"
name = "gitpython"
optional = false
python-versions = ">=3.4"
version = "3.1.11"

[package.dependencies]
gitdb = ">=4.0.1,<5"

[[package]]
category = "main"
description = "Internationalized Domain Names in Applications (IDNA)"
name = "idna"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "2.10"

[[package]]
category = "dev"
description = "Getting image size from png/jpeg/jpeg2000/gif file"
name = "imagesize"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.2.0"

[[package]]
category = "dev"
description = "Read metadata from Python packages"
marker = "python_version < \"3.8\""
name = "importlib-metadata"
optional = false
python-versions = ">=3.6"
version = "3.3.0"

[package.dependencies]
zipp = ">=0.5"

[package.dependencies.typing-extensions]
python = "<3.8"
version = ">=3.6.4"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=3.5,<3.7.3 || >3.7.3)", "pytest-checkdocs (>=1.2.3)", "pytest-flake8", "pytest-cov", "jaraco.test (>=3.2.0)", "packaging", "pep517", "pyfakefs", "flufl.flake8", "pytest-black (>=0.3.7)", "pytest-mypy", "importlib-resources (>=1.3)"]

[[package]]
category = "dev"
description = "iniconfig: brain-dead simple config-ini parsing"
name = "iniconfig"
optional = false
python-versions = "*"
version = "1.1.1"

[[package]]
category = "dev"
description = "A very fast and expressive template engine."
name = "jinja2"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "2.11.2"

[package.dependencies]
MarkupSafe = ">=0.23"

[package.extras]
i18n = ["Babel (>=0.8)"]

[[package]]
category = "main"
description = "JSON Matching Expressions"
name = "jmespath"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "0.10.0"

[[package]]
category = "dev"
description = "Safely add untrusted strings to HTML/XML markup."
name = "markupsafe"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*"
version = "1.1.1"

[[package]]
category = "dev"
description = "McCabe checker, plugin for flake8"
name = "mccabe"
optional = false
python-versions = "*"
version = "0.6.1"

[[package]]
category = "dev"
description = "Core utilities for Python packages"
name = "packaging"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "20.8"

[package.dependencies]
pyparsing = ">=2.0.2"

[[package]]
category = "dev"
description = "plugin and hook calling mechanisms for python"
name = "pluggy"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "0.13.1"

[package.dependencies]
[package.dependencies.importlib-metadata]
python = "<3.8"
version = ">=0.12"

[package.extras]
dev = ["pre-commit", "tox"]

[[package]]
category = "dev"
description = "library with cross-python path, ini-parsing, io, code, log facilities"
name = "py"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "1.10.0"

[[package]]
category = "main"
description = "ASN.1 types and codecs"
marker = "python_version != \"3.4\""
name = "pyasn1"
optional = false
python-versions = "*"
version = "0.4.8"

[[package]]
category = "dev"
description = "Python style guide checker"
name = "pycodestyle"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "2.6.0"

[[package]]
category = "dev"
description = "passive checker of Python programs"
name = "pyflakes"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "2.2.0"

[[package]]
category = "dev"
description = "Pygments is a syntax highlighting package written in Python."
name = "pygments"
optional = false
python-versions = ">=3.5"
version = "2.7.3"

[[package]]
category = "dev"
description = "Python parsing module"
name = "pyparsing"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "2.4.7"

[[package]]
category = "dev"
description = "pytest: simple powerful testing with Python"
name = "pytest"
optional = false
python-versions = ">=3.6"
version = "6.2.1"

[package.dependencies]
atomicwrites = ">=1.0"
attrs = ">=19.2.0"
colorama = "*"
iniconfig = "*"
packaging = "*"
pluggy = ">=0.12,<1.0.0a1"
py = ">=1.8.2"
toml = "*"

[package.dependencies.importlib-metadata]
python = "<3.8"
version = ">=0.12"

[package.extras]
testing = ["argcomplete", "hypothesis (>=3.56)", "mock", "nose", "requests", "xmlschema"]

[[package]]
category = "dev"
description = "Pytest plugin for measuring coverage."
name = "pytest-cov"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "2.10.1"

[package.dependencies]
coverage = ">=4.4"
pytest = ">=4.6"

[package.extras]
testing = ["fields", "hunter", "process-tests (2.0.2)", "six", "pytest-xdist", "virtualenv"]

[[package]]
category = "dev"
description = "Thin-wrapper around the mock package for easier use with pytest"
name = "pytest-mock"
optional = false
python-versions = ">=3.5"
version = "3.4.0"

[package.dependencies]
pytest = ">=5.0"

[package.extras]
dev = ["pre-commit", "tox", "pytest-asyncio"]

[[package]]
category = "dev"
description = "Invoke py.test as distutils command with dependency resolution"
name = "pytest-runner"
optional = false
python-versions = ">=2.7"
version = "5.2"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=3.5,<3.7.3 || >3.7.3)", "pytest-checkdocs", "pytest-flake8", "pytest-black-multipy", "pytest-cov", "pytest-virtualenv"]

[[package]]
category = "main"
description = "Extensions to the standard Python datetime module"
name = "python-dateutil"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,>=2.7"
version = "2.8.1"

[package.dependencies]
six = ">=1.5"

[[package]]
category = "main"
description = "World timezone definitions, modern and historical"
name = "pytz"
optional = false
python-versions = "*"
version = "2020.4"

[[package]]
category = "main"
description = "YAML parser and emitter for Python"
marker = "python_version != \"3.4\""
name = "pyyaml"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "5.3.1"

[[package]]
category = "main"
description = "Python HTTP for Humans."
name = "requests"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*"
version = "2.25.1"

[package.dependencies]
certifi = ">=2017.4.17"
chardet = ">=3.0.2,<5"
idna = ">=2.5,<3"
urllib3 = ">=1.21.1,<1.27"

[package.extras]
security = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)"]
socks = ["PySocks (>=1.5.6,<1.5.7 || >1.5.7)", "win-inet-pton"]

[[package]]
category = "main"
description = "Pure-Python RSA implementation"
marker = "python_version != \"3.4\""
name = "rsa"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"
version = "4.5"

[package.dependencies]
pyasn1 = ">=0.1.3"

[[package]]
category = "main"
description = "An Amazon S3 Transfer Manager"
name = "s3transfer"
optional = false
python-versions = "*"
version = "0.3.3"

[package.dependencies]
botocore = ">=1.12.36,<2.0a.0"

[[package]]
category = "main"
description = "Python 2 and 3 compatibility utilities"
name = "six"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*"
version = "1.15.0"

[[package]]
category = "main"
description = "A pure Python implementation of a sliding window memory map manager"
name = "smmap"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*"
version = "3.0.4"

[[package]]
category = "dev"
description = "This package provides 26 stemmers for 25 languages generated from Snowball algorithms."
name = "snowballstemmer"
optional = false
python-versions = "*"
version = "2.0.0"

[[package]]
category = "main"
description = "A modern CSS selector implementation for Beautiful Soup."
marker = "python_version >= \"3.0\""
name = "soupsieve"
optional = false
python-versions = ">=3.5"
version = "2.1"

[[package]]
category = "dev"
description = "Python documentation generator"
name = "sphinx"
optional = false
python-versions = ">=3.5"
version = "3.3.1"

[package.dependencies]
Jinja2 = ">=2.3"
Pygments = ">=2.0"
alabaster = ">=0.7,<0.8"
babel = ">=1.3"
colorama = ">=0.3.5"
docutils = ">=0.12"
imagesize = "*"
packaging = "*"
requests = ">=2.5.0"
setuptools = "*"
snowballstemmer = ">=1.1"
sphinxcontrib-applehelp = "*"
sphinxcontrib-devhelp = "*"
sphinxcontrib-htmlhelp = "*"
sphinxcontrib-jsmath = "*"
sphinxcontrib-qthelp = "*"
sphinxcontrib-serializinghtml = "*"

[package.extras]
docs = ["sphinxcontrib-websupport"]
lint = ["flake8 (>=3.5.0)", "flake8-import-order", "mypy (>=0.790)", "docutils-stubs"]
test = ["pytest", "pytest-cov", "html5lib", "typed-ast", "cython"]

[[package]]
category = "dev"
description = "Read the Docs theme for Sphinx"
name = "sphinx-rtd-theme"
optional = false
python-versions = "*"
version = "0.5.0"

[package.dependencies]
sphinx = "*"

[package.extras]
dev = ["transifex-client", "sphinxcontrib-httpdomain", "bump2version"]

[[package]]
category = "dev"
description = "sphinxcontrib-applehelp is a sphinx extension which outputs Apple help books"
name = "sphinxcontrib-applehelp"
optional = false
python-versions = ">=3.5"
version = "1.0.2"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
category = "dev"
description = "sphinxcontrib-devhelp is a sphinx extension which outputs Devhelp document."
name = "sphinxcontrib-devhelp"
optional = false
python-versions = ">=3.5"
version = "1.0.2"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
category = "dev"
description = "sphinxcontrib-htmlhelp is a sphinx extension which renders HTML help files"
name = "sphinxcontrib-htmlhelp"
optional = false
python-versions = ">=3.5"
version = "1.0.3"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest", "html5lib"]

[[package]]
category = "dev"
description = "A sphinx extension which renders display math in HTML via JavaScript"
name = "sphinxcontrib-jsmath"
optional = false
python-versions = ">=3.5"
version = "1.0.1"

[package.extras]
test = ["pytest", "flake8", "mypy"]

[[package]]
category = "dev"
description = "sphinxcontrib-qthelp is a sphinx extension which outputs QtHelp document."
name = "sphinxcontrib-qthelp"
optional = false
python-versions = ">=3.5"
version = "1.0.3"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
category = "dev"
description = "sphinxcontrib-serializinghtml is a sphinx extension which outputs \"serialized\" HTML files (json and pickle)."
name = "sphinxcontrib-serializinghtml"
optional = false
python-versions = ">=3.5"
version = "1.1.4"

[package.extras]
lint = ["flake8", "mypy", "docutils-stubs"]
test = ["pytest"]

[[package]]
category = "main"
description = "Structured Logging for Python"
name = "structlog"
optional = false
python-versions = "*"
version = "19.2.0"

[package.dependencies]
six = "*"

[package.extras]
azure-pipelines = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "pytest-azurepipelines", "python-rapidjson"]
dev = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "sphinx", "twisted", "pre-commit", "python-rapidjson"]
docs = ["sphinx", "twisted"]
tests = ["coverage", "freezegun (>=0.2.8)", "pretend", "pytest (>=3.3.0)", "simplejson", "python-rapidjson"]

[[package]]
category = "main"
description = "Python Library for Tom's Obvious, Minimal Language"
name = "toml"
optional = false
python-versions = ">=2.6, !=3.0.*, !=3.1.*, !=3.2.*"
version = "0.10.2"

[[package]]
category = "dev"
description = "Backported and Experimental Type Hints for Python 3.5+"
marker = "python_version < \"3.8\""
name = "typing-extensions"
optional = false
python-versions = "*"
version = "3.7.4.3"

[[package]]
category = "main"
description = "HTTP library with thread-safe connection pooling, file post, and more."
name = "urllib3"
optional = false
python-versions = ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4"
version = "1.26.2"

[package.extras]
brotli = ["brotlipy (>=0.6.0)"]
secure = ["pyOpenSSL (>=0.14)", "cryptography (>=1.3.4)", "idna (>=2.0.0)", "certifi", "ipaddress"]
socks = ["PySocks (>=1.5.6,<1.5.7 || >1.5.7,<2.0)"]

[[package]]
category = "main"
description = "Waitress WSGI server"
name = "waitress"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7"
version = "1.4.4"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.9)"]
testing = ["pytest", "pytest-cover", "coverage (>=5.0)"]

[[package]]
category = "main"
description = "WSGI request and response object"
name = "webob"
optional = false
python-versions = ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*"
version = "1.8.6"

[package.extras]
docs = ["Sphinx (>=1.7.5)", "pylons-sphinx-themes"]
testing = ["pytest (>=3.1.0)", "coverage", "pytest-cov", "pytest-xdist"]

[[package]]
category = "main"
description = "Helper to test WSGI applications"
name = "webtest"
optional = false
python-versions = "*"
version = "2.0.35"

[package.dependencies]
WebOb = ">=1.2"
beautifulsoup4 = "*"
six = "*"
waitress = ">=0.8.5"

[package.extras]
docs = ["Sphinx (>=1.8.1)", "docutils", "pylons-sphinx-themes (>=1.0.8)"]
tests = ["nose (<1.3.0)", "coverage", "mock", "pastedeploy", "wsgiproxy2", "pyquery"]

[[package]]
category = "dev"
description = "Backport of pathlib-compatible object wrapper for zip files"
marker = "python_version < \"3.8\""
name = "zipp"
optional = false
python-versions = ">=3.6"
version = "3.4.0"

[package.extras]
docs = ["sphinx", "jaraco.packaging (>=3.2)", "rst.linker (>=1.9)"]
testing = ["pytest (>=3.5,<3.7.3 || >3.7.3)", "pytest-checkdocs (>=1.2.3)", "pytest-flake8", "pytest-cov", "jaraco.test (>=3.2.0)", "jaraco.itertools", "func-timeout", "pytest-black (>=0.3.7)", "pytest-mypy"]

[metadata]
content-hash = "b271627d1fb358d1b27c9689a8151cb90a7174c73e44235045d34e15340b96f0"
lock-version = "1.0"
python-versions = ">=3.6,<3.8"

[metadata.files]
alabaster = [
    {file = "alabaster-0.7.12-py2.py3-none-any.whl", hash = "sha256:446438bdcca0e05bd45ea2de1668c1d9b032e1a9154c2c259092d77031ddd359"},
    {file = "alabaster-0.7.12.tar.gz", hash = "sha256:a661d72d58e6ea8a57f7a86e37d86716863ee5e92788398526d58b26a4e4dc02"},
]
atomicwrites = [
    {file = "atomicwrites-1.4.0-py2.py3-none-any.whl", hash = "sha256:6d1784dea7c0c8d4a5172b6c620f40b6e4cbfdf96d783691f2e1302a7b88e197"},
    {file = "atomicwrites-1.4.0.tar.gz", hash = "sha256:ae70396ad1a434f9c7046fd2dd196fc04b12f9e91ffb859164193be8b6168a7a"},
]
attrs = [
    {file = "attrs-20.3.0-py2.py3-none-any.whl", hash = "sha256:31b2eced602aa8423c2aea9c76a724617ed67cf9513173fd3a4f03e3a929c7e6"},
    {file = "attrs-20.3.0.tar.gz", hash = "sha256:832aa3cde19744e49938b91fea06d69ecb9e649c93ba974535d08ad92164f700"},
]
aws-requests-auth = [
    {file = "aws-requests-auth-0.4.3.tar.gz", hash = "sha256:33593372018b960a31dbbe236f89421678b885c35f0b6a7abfae35bb77e069b2"},
    {file = "aws_requests_auth-0.4.3-py2.py3-none-any.whl", hash = "sha256:646bc37d62140ea1c709d20148f5d43197e6bd2d63909eb36fa4bb2345759977"},
]
awscli = [
    {file = "awscli-1.18.199-py2.py3-none-any.whl", hash = "sha256:f9b8aa6c1abd12e5f92b27d338fac93098a1f43795384152cd556b8aa071f800"},
    {file = "awscli-1.18.199.tar.gz", hash = "sha256:6410aee5e656dc4250b0d4ee6bbc7e70f8aef9eb6c24f84904f00edfe9b3cc26"},
]
babel = [
    {file = "Babel-2.9.0-py2.py3-none-any.whl", hash = "sha256:9d35c22fcc79893c3ecc85ac4a56cde1ecf3f19c540bba0922308a6c06ca6fa5"},
    {file = "Babel-2.9.0.tar.gz", hash = "sha256:da031ab54472314f210b0adcff1588ee5d1d1d0ba4dbd07b94dba82bde791e05"},
]
beautifulsoup4 = [
    {file = "beautifulsoup4-4.9.3-py2-none-any.whl", hash = "sha256:4c98143716ef1cb40bf7f39a8e3eec8f8b009509e74904ba3a7b315431577e35"},
    {file = "beautifulsoup4-4.9.3-py3-none-any.whl", hash = "sha256:fff47e031e34ec82bf17e00da8f592fe7de69aeea38be00523c04623c04fb666"},
    {file = "beautifulsoup4-4.9.3.tar.gz", hash = "sha256:84729e322ad1d5b4d25f805bfa05b902dd96450f43842c4e99067d5e1369eb25"},
]
boto3 = [
    {file = "boto3-1.16.39-py2.py3-none-any.whl", hash = "sha256:c7556b0861d982b71043fbc0df024644320c817ad796391c442d0c2f15a77223"},
    {file = "boto3-1.16.39.tar.gz", hash = "sha256:a05614300fd404c7952a55ae92e106b9400ae65886425aaab3104527be833848"},
]
boto3-stubs = [
    {file = "boto3-stubs-1.16.39.0.tar.gz", hash = "sha256:2707799b3d556feabca67e0764737e665da876e56dda60751d36bddd5001c555"},
    {file = "boto3_stubs-1.16.39.0-py3-none-any.whl", hash = "sha256:adc4da7549c5620af7a74a7d29981afc4f7aed3eccf55857d08da2f00ee575cd"},
]
botocore = [
    {file = "botocore-1.19.39-py2.py3-none-any.whl", hash = "sha256:449e4196160ff58ee27d2a626a7ce4cfff2640fe1806d7a279e73a30ad286347"},
    {file = "botocore-1.19.39.tar.gz", hash = "sha256:e0d0386098a072abd7b6c087e6149d997377c969a823ebe01b3f5bfabe9bfac0"},
]
certifi = [
    {file = "certifi-2020.12.5-py2.py3-none-any.whl", hash = "sha256:719a74fb9e33b9bd44cc7f3a8d94bc35e4049deebe19ba7d8e108280cfd59830"},
    {file = "certifi-2020.12.5.tar.gz", hash = "sha256:1a4995114262bffbc2413b159f2a1a480c969de6e6eb13ee966d470af86af59c"},
]
chardet = [
    {file = "chardet-4.0.0-py2.py3-none-any.whl", hash = "sha256:f864054d66fd9118f2e67044ac8981a54775ec5b67aed0441892edb553d21da5"},
    {file = "chardet-4.0.0.tar.gz", hash = "sha256:0d6f53a15db4120f2b08c94f11e7d93d2c911ee118b6b30a04ec3ee8310179fa"},
]
codacy-coverage = [
    {file = "codacy-coverage-1.3.11.tar.gz", hash = "sha256:b94651934745c638a980ad8d67494077e60f71e19e29aad1c275b66e0a070cbc"},
    {file = "codacy_coverage-1.3.11-py2.py3-none-any.whl", hash = "sha256:d8a1ce56b0dd156d6b1de14fa6217d32ec86097902f08a17ff2f95ba27264474"},
]
colorama = [
    {file = "colorama-0.4.3-py2.py3-none-any.whl", hash = "sha256:7d73d2a99753107a36ac6b455ee49046802e59d9d076ef8e47b61499fa29afff"},
    {file = "colorama-0.4.3.tar.gz", hash = "sha256:e96da0d330793e2cb9485e9ddfd918d456036c7149416295932478192f4436a1"},
]
coverage = [
    {file = "coverage-5.3-cp27-cp27m-macosx_10_13_intel.whl", hash = "sha256:bd3166bb3b111e76a4f8e2980fa1addf2920a4ca9b2b8ca36a3bc3dedc618270"},
    {file = "coverage-5.3-cp27-cp27m-macosx_10_9_x86_64.whl", hash = "sha256:9342dd70a1e151684727c9c91ea003b2fb33523bf19385d4554f7897ca0141d4"},
    {file = "coverage-5.3-cp27-cp27m-manylinux1_i686.whl", hash = "sha256:63808c30b41f3bbf65e29f7280bf793c79f54fb807057de7e5238ffc7cc4d7b9"},
    {file = "coverage-5.3-cp27-cp27m-manylinux1_x86_64.whl", hash = "sha256:4d6a42744139a7fa5b46a264874a781e8694bb32f1d76d8137b68138686f1729"},
    {file = "coverage-5.3-cp27-cp27m-win32.whl", hash = "sha256:86e9f8cd4b0cdd57b4ae71a9c186717daa4c5a99f3238a8723f416256e0b064d"},
    {file = "coverage-5.3-cp27-cp27m-win_amd64.whl", hash = "sha256:7858847f2d84bf6e64c7f66498e851c54de8ea06a6f96a32a1d192d846734418"},
    {file = "coverage-5.3-cp27-cp27mu-manylinux1_i686.whl", hash = "sha256:530cc8aaf11cc2ac7430f3614b04645662ef20c348dce4167c22d99bec3480e9"},
    {file = "coverage-5.3-cp27-cp27mu-manylinux1_x86_64.whl", hash = "sha256:381ead10b9b9af5f64646cd27107fb27b614ee7040bb1226f9c07ba96625cbb5"},
    {file = "coverage-5.3-cp35-cp35m-macosx_10_13_x86_64.whl", hash = "sha256:71b69bd716698fa62cd97137d6f2fdf49f534decb23a2c6fc80813e8b7be6822"},
    {file = "coverage-5.3-cp35-cp35m-manylinux1_i686.whl", hash = "sha256:1d44bb3a652fed01f1f2c10d5477956116e9b391320c94d36c6bf13b088a1097"},
    {file = "coverage-5.3-cp35-cp35m-manylinux1_x86_64.whl", hash = "sha256:1c6703094c81fa55b816f5ae542c6ffc625fec769f22b053adb42ad712d086c9"},
    {file = "coverage-5.3-cp35-cp35m-win32.whl", hash = "sha256:cedb2f9e1f990918ea061f28a0f0077a07702e3819602d3507e2ff98c8d20636"},
    {file = "coverage-5.3-cp35-cp35m-win_amd64.whl", hash = "sha256:7f43286f13d91a34fadf61ae252a51a130223c52bfefb50310d5b2deb062cf0f"},
    {file = "coverage-5.3-cp36-cp36m-macosx_10_13_x86_64.whl", hash = "sha256:c851b35fc078389bc16b915a0a7c1d5923e12e2c5aeec58c52f4aa8085ac8237"},
    {file = "coverage-5.3-cp36-cp36m-manylinux1_i686.whl", hash = "sha256:aac1ba0a253e17889550ddb1b60a2063f7474155465577caa2a3b131224cfd54"},
    {file = "coverage-5.3-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:2b31f46bf7b31e6aa690d4c7a3d51bb262438c6dcb0d528adde446531d0d3bb7"},
    {file = "coverage-5.3-cp36-cp36m-win32.whl", hash = "sha256:c5f17ad25d2c1286436761b462e22b5020d83316f8e8fcb5deb2b3151f8f1d3a"},
    {file = "coverage-5.3-cp36-cp36m-win_amd64.whl", hash = "sha256:aef72eae10b5e3116bac6957de1df4d75909fc76d1499a53fb6387434b6bcd8d"},
    {file = "coverage-5.3-cp37-cp37m-macosx_10_13_x86_64.whl", hash = "sha256:e8caf961e1b1a945db76f1b5fa9c91498d15f545ac0ababbe575cfab185d3bd8"},
    {file = "coverage-5.3-cp37-cp37m-manylinux1_i686.whl", hash = "sha256:29a6272fec10623fcbe158fdf9abc7a5fa032048ac1d8631f14b50fbfc10d17f"},
    {file = "coverage-5.3-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:2d43af2be93ffbad25dd959899b5b809618a496926146ce98ee0b23683f8c51c"},
    {file = "coverage-5.3-cp37-cp37m-win32.whl", hash = "sha256:c3888a051226e676e383de03bf49eb633cd39fc829516e5334e69b8d81aae751"},
    {file = "coverage-5.3-cp37-cp37m-win_amd64.whl", hash = "sha256:9669179786254a2e7e57f0ecf224e978471491d660aaca833f845b72a2df3709"},
    {file = "coverage-5.3-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:0203acd33d2298e19b57451ebb0bed0ab0c602e5cf5a818591b4918b1f97d516"},
    {file = "coverage-5.3-cp38-cp38-manylinux1_i686.whl", hash = "sha256:582ddfbe712025448206a5bc45855d16c2e491c2dd102ee9a2841418ac1c629f"},
    {file = "coverage-5.3-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:0f313707cdecd5cd3e217fc68c78a960b616604b559e9ea60cc16795c4304259"},
    {file = "coverage-5.3-cp38-cp38-win32.whl", hash = "sha256:78e93cc3571fd928a39c0b26767c986188a4118edc67bc0695bc7a284da22e82"},
    {file = "coverage-5.3-cp38-cp38-win_amd64.whl", hash = "sha256:8f264ba2701b8c9f815b272ad568d555ef98dfe1576802ab3149c3629a9f2221"},
    {file = "coverage-5.3-cp39-cp39-macosx_10_13_x86_64.whl", hash = "sha256:50691e744714856f03a86df3e2bff847c2acede4c191f9a1da38f088df342978"},
    {file = "coverage-5.3-cp39-cp39-manylinux1_i686.whl", hash = "sha256:9361de40701666b034c59ad9e317bae95c973b9ff92513dd0eced11c6adf2e21"},
    {file = "coverage-5.3-cp39-cp39-manylinux1_x86_64.whl", hash = "sha256:c1b78fb9700fc961f53386ad2fd86d87091e06ede5d118b8a50dea285a071c24"},
    {file = "coverage-5.3-cp39-cp39-win32.whl", hash = "sha256:cb7df71de0af56000115eafd000b867d1261f786b5eebd88a0ca6360cccfaca7"},
    {file = "coverage-5.3-cp39-cp39-win_amd64.whl", hash = "sha256:47a11bdbd8ada9b7ee628596f9d97fbd3851bd9999d398e9436bd67376dbece7"},
    {file = "coverage-5.3.tar.gz", hash = "sha256:280baa8ec489c4f542f8940f9c4c2181f0306a8ee1a54eceba071a449fb870a0"},
]
coveralls = [
    {file = "coveralls-2.2.0-py2.py3-none-any.whl", hash = "sha256:2301a19500b06649d2ec4f2858f9c69638d7699a4c63027c5d53daba666147cc"},
    {file = "coveralls-2.2.0.tar.gz", hash = "sha256:b990ba1f7bc4288e63340be0433698c1efe8217f78c689d254c2540af3d38617"},
]
dcicutils = [
    {file = "dcicutils-1.8.1-py3-none-any.whl", hash = "sha256:2e57552542b71b3a830ccc3f453499fe927a6610d5a6238de1cc51da2c1bf6e7"},
    {file = "dcicutils-1.8.1.tar.gz", hash = "sha256:d33359bf14df172990bd0b62a969ef09bc489facd17122ab44630332ad13d1b1"},
]
docopt = [
    {file = "docopt-0.6.2.tar.gz", hash = "sha256:49b3a825280bd66b3aa83585ef59c4a8c82f2c8a522dbe754a8bc8d08c85c491"},
]
docutils = [
    {file = "docutils-0.15.2-py2-none-any.whl", hash = "sha256:9e4d7ecfc600058e07ba661411a2b7de2fd0fafa17d1a7f7361cd47b1175c827"},
    {file = "docutils-0.15.2-py3-none-any.whl", hash = "sha256:6c4f696463b79f1fb8ba0c594b63840ebd41f059e92b31957c46b74a4599b6d0"},
    {file = "docutils-0.15.2.tar.gz", hash = "sha256:a2aeea129088da402665e92e0b25b04b073c04b2dce4ab65caaa38b7ce2e1a99"},
]
elasticsearch = [
    {file = "elasticsearch-6.8.1-py2.py3-none-any.whl", hash = "sha256:540d633afcc0a32972e4b489c4559c9a96e294850853238f7a18b1cbd267c2ed"},
    {file = "elasticsearch-6.8.1.tar.gz", hash = "sha256:a8062a00b61bc7babeea028530667583a68ecb1a9f59ab0b22ff7feaf70d3564"},
]
flake8 = [
    {file = "flake8-3.8.4-py2.py3-none-any.whl", hash = "sha256:749dbbd6bfd0cf1318af27bf97a14e28e5ff548ef8e5b1566ccfb25a11e7c839"},
    {file = "flake8-3.8.4.tar.gz", hash = "sha256:aadae8761ec651813c24be05c6f7b4680857ef6afaae4651a4eccaef97ce6c3b"},
]
gitdb = [
    {file = "gitdb-4.0.5-py3-none-any.whl", hash = "sha256:91f36bfb1ab7949b3b40e23736db18231bf7593edada2ba5c3a174a7b23657ac"},
    {file = "gitdb-4.0.5.tar.gz", hash = "sha256:c9e1f2d0db7ddb9a704c2a0217be31214e91a4fe1dea1efad19ae42ba0c285c9"},
]
gitpython = [
    {file = "GitPython-3.1.11-py3-none-any.whl", hash = "sha256:6eea89b655917b500437e9668e4a12eabdcf00229a0df1762aabd692ef9b746b"},
    {file = "GitPython-3.1.11.tar.gz", hash = "sha256:befa4d101f91bad1b632df4308ec64555db684c360bd7d2130b4807d49ce86b8"},
]
idna = [
    {file = "idna-2.10-py2.py3-none-any.whl", hash = "sha256:b97d804b1e9b523befed77c48dacec60e6dcb0b5391d57af6a65a312a90648c0"},
    {file = "idna-2.10.tar.gz", hash = "sha256:b307872f855b18632ce0c21c5e45be78c0ea7ae4c15c828c20788b26921eb3f6"},
]
imagesize = [
    {file = "imagesize-1.2.0-py2.py3-none-any.whl", hash = "sha256:6965f19a6a2039c7d48bca7dba2473069ff854c36ae6f19d2cde309d998228a1"},
    {file = "imagesize-1.2.0.tar.gz", hash = "sha256:b1f6b5a4eab1f73479a50fb79fcf729514a900c341d8503d62a62dbc4127a2b1"},
]
importlib-metadata = [
    {file = "importlib_metadata-3.3.0-py3-none-any.whl", hash = "sha256:bf792d480abbd5eda85794e4afb09dd538393f7d6e6ffef6e9f03d2014cf9450"},
    {file = "importlib_metadata-3.3.0.tar.gz", hash = "sha256:5c5a2720817414a6c41f0a49993908068243ae02c1635a228126519b509c8aed"},
]
iniconfig = [
    {file = "iniconfig-1.1.1-py2.py3-none-any.whl", hash = "sha256:011e24c64b7f47f6ebd835bb12a743f2fbe9a26d4cecaa7f53bc4f35ee9da8b3"},
    {file = "iniconfig-1.1.1.tar.gz", hash = "sha256:bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32"},
]
jinja2 = [
    {file = "Jinja2-2.11.2-py2.py3-none-any.whl", hash = "sha256:f0a4641d3cf955324a89c04f3d94663aa4d638abe8f733ecd3582848e1c37035"},
    {file = "Jinja2-2.11.2.tar.gz", hash = "sha256:89aab215427ef59c34ad58735269eb58b1a5808103067f7bb9d5836c651b3bb0"},
]
jmespath = [
    {file = "jmespath-0.10.0-py2.py3-none-any.whl", hash = "sha256:cdf6525904cc597730141d61b36f2e4b8ecc257c420fa2f4549bac2c2d0cb72f"},
    {file = "jmespath-0.10.0.tar.gz", hash = "sha256:b85d0567b8666149a93172712e68920734333c0ce7e89b78b3e987f71e5ed4f9"},
]
markupsafe = [
    {file = "MarkupSafe-1.1.1-cp27-cp27m-macosx_10_6_intel.whl", hash = "sha256:09027a7803a62ca78792ad89403b1b7a73a01c8cb65909cd876f7fcebd79b161"},
    {file = "MarkupSafe-1.1.1-cp27-cp27m-manylinux1_i686.whl", hash = "sha256:e249096428b3ae81b08327a63a485ad0878de3fb939049038579ac0ef61e17e7"},
    {file = "MarkupSafe-1.1.1-cp27-cp27m-manylinux1_x86_64.whl", hash = "sha256:500d4957e52ddc3351cabf489e79c91c17f6e0899158447047588650b5e69183"},
    {file = "MarkupSafe-1.1.1-cp27-cp27m-win32.whl", hash = "sha256:b2051432115498d3562c084a49bba65d97cf251f5a331c64a12ee7e04dacc51b"},
    {file = "MarkupSafe-1.1.1-cp27-cp27m-win_amd64.whl", hash = "sha256:98c7086708b163d425c67c7a91bad6e466bb99d797aa64f965e9d25c12111a5e"},
    {file = "MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_i686.whl", hash = "sha256:cd5df75523866410809ca100dc9681e301e3c27567cf498077e8551b6d20e42f"},
    {file = "MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl", hash = "sha256:43a55c2930bbc139570ac2452adf3d70cdbb3cfe5912c71cdce1c2c6bbd9c5d1"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-macosx_10_6_intel.whl", hash = "sha256:1027c282dad077d0bae18be6794e6b6b8c91d58ed8a8d89a89d59693b9131db5"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-manylinux1_i686.whl", hash = "sha256:62fe6c95e3ec8a7fad637b7f3d372c15ec1caa01ab47926cfdf7a75b40e0eac1"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-manylinux1_x86_64.whl", hash = "sha256:88e5fcfb52ee7b911e8bb6d6aa2fd21fbecc674eadd44118a9cc3863f938e735"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-win32.whl", hash = "sha256:ade5e387d2ad0d7ebf59146cc00c8044acbd863725f887353a10df825fc8ae21"},
    {file = "MarkupSafe-1.1.1-cp34-cp34m-win_amd64.whl", hash = "sha256:09c4b7f37d6c648cb13f9230d847adf22f8171b1ccc4d5682398e77f40309235"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-macosx_10_6_intel.whl", hash = "sha256:79855e1c5b8da654cf486b830bd42c06e8780cea587384cf6545b7d9ac013a0b"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-manylinux1_i686.whl", hash = "sha256:c8716a48d94b06bb3b2524c2b77e055fb313aeb4ea620c8dd03a105574ba704f"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-manylinux1_x86_64.whl", hash = "sha256:7c1699dfe0cf8ff607dbdcc1e9b9af1755371f92a68f706051cc8c37d447c905"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-win32.whl", hash = "sha256:6dd73240d2af64df90aa7c4e7481e23825ea70af4b4922f8ede5b9e35f78a3b1"},
    {file = "MarkupSafe-1.1.1-cp35-cp35m-win_amd64.whl", hash = "sha256:9add70b36c5666a2ed02b43b335fe19002ee5235efd4b8a89bfcf9005bebac0d"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-macosx_10_6_intel.whl", hash = "sha256:24982cc2533820871eba85ba648cd53d8623687ff11cbb805be4ff7b4c971aff"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-manylinux1_i686.whl", hash = "sha256:00bc623926325b26bb9605ae9eae8a215691f33cae5df11ca5424f06f2d1f473"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-manylinux1_x86_64.whl", hash = "sha256:717ba8fe3ae9cc0006d7c451f0bb265ee07739daf76355d06366154ee68d221e"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-win32.whl", hash = "sha256:535f6fc4d397c1563d08b88e485c3496cf5784e927af890fb3c3aac7f933ec66"},
    {file = "MarkupSafe-1.1.1-cp36-cp36m-win_amd64.whl", hash = "sha256:b1282f8c00509d99fef04d8ba936b156d419be841854fe901d8ae224c59f0be5"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-macosx_10_6_intel.whl", hash = "sha256:8defac2f2ccd6805ebf65f5eeb132adcf2ab57aa11fdf4c0dd5169a004710e7d"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-manylinux1_i686.whl", hash = "sha256:46c99d2de99945ec5cb54f23c8cd5689f6d7177305ebff350a58ce5f8de1669e"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-manylinux1_x86_64.whl", hash = "sha256:ba59edeaa2fc6114428f1637ffff42da1e311e29382d81b339c1817d37ec93c6"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-win32.whl", hash = "sha256:b00c1de48212e4cc9603895652c5c410df699856a2853135b3967591e4beebc2"},
    {file = "MarkupSafe-1.1.1-cp37-cp37m-win_amd64.whl", hash = "sha256:9bf40443012702a1d2070043cb6291650a0841ece432556f784f004937f0f32c"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-macosx_10_9_x86_64.whl", hash = "sha256:6788b695d50a51edb699cb55e35487e430fa21f1ed838122d722e0ff0ac5ba15"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-manylinux1_i686.whl", hash = "sha256:cdb132fc825c38e1aeec2c8aa9338310d29d337bebbd7baa06889d09a60a1fa2"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-manylinux1_x86_64.whl", hash = "sha256:13d3144e1e340870b25e7b10b98d779608c02016d5184cfb9927a9f10c689f42"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-win32.whl", hash = "sha256:596510de112c685489095da617b5bcbbac7dd6384aeebeda4df6025d0256a81b"},
    {file = "MarkupSafe-1.1.1-cp38-cp38-win_amd64.whl", hash = "sha256:e8313f01ba26fbbe36c7be1966a7b7424942f670f38e666995b88d012765b9be"},
    {file = "MarkupSafe-1.1.1.tar.gz", hash = "sha256:29872e92839765e546828bb7754a68c418d927cd064fd4708fab9fe9c8bb116b"},
]
mccabe = [
    {file = "mccabe-0.6.1-py2.py3-none-any.whl", hash = "sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42"},
    {file = "mccabe-0.6.1.tar.gz", hash = "sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f"},
]
packaging = [
    {file = "packaging-20.8-py2.py3-none-any.whl", hash = "sha256:24e0da08660a87484d1602c30bb4902d74816b6985b93de36926f5bc95741858"},
    {file = "packaging-20.8.tar.gz", hash = "sha256:78598185a7008a470d64526a8059de9aaa449238f280fc9eb6b13ba6c4109093"},
]
pluggy = [
    {file = "pluggy-0.13.1-py2.py3-none-any.whl", hash = "sha256:966c145cd83c96502c3c3868f50408687b38434af77734af1e9ca461a4081d2d"},
    {file = "pluggy-0.13.1.tar.gz", hash = "sha256:15b2acde666561e1298d71b523007ed7364de07029219b604cf808bfa1c765b0"},
]
py = [
    {file = "py-1.10.0-py2.py3-none-any.whl", hash = "sha256:3b80836aa6d1feeaa108e046da6423ab8f6ceda6468545ae8d02d9d58d18818a"},
    {file = "py-1.10.0.tar.gz", hash = "sha256:21b81bda15b66ef5e1a777a21c4dcd9c20ad3efd0b3f817e7a809035269e1bd3"},
]
pyasn1 = [
    {file = "pyasn1-0.4.8-py2.4.egg", hash = "sha256:fec3e9d8e36808a28efb59b489e4528c10ad0f480e57dcc32b4de5c9d8c9fdf3"},
    {file = "pyasn1-0.4.8-py2.5.egg", hash = "sha256:0458773cfe65b153891ac249bcf1b5f8f320b7c2ce462151f8fa74de8934becf"},
    {file = "pyasn1-0.4.8-py2.6.egg", hash = "sha256:5c9414dcfede6e441f7e8f81b43b34e834731003427e5b09e4e00e3172a10f00"},
    {file = "pyasn1-0.4.8-py2.7.egg", hash = "sha256:6e7545f1a61025a4e58bb336952c5061697da694db1cae97b116e9c46abcf7c8"},
    {file = "pyasn1-0.4.8-py2.py3-none-any.whl", hash = "sha256:39c7e2ec30515947ff4e87fb6f456dfc6e84857d34be479c9d4a4ba4bf46aa5d"},
    {file = "pyasn1-0.4.8-py3.1.egg", hash = "sha256:78fa6da68ed2727915c4767bb386ab32cdba863caa7dbe473eaae45f9959da86"},
    {file = "pyasn1-0.4.8-py3.2.egg", hash = "sha256:08c3c53b75eaa48d71cf8c710312316392ed40899cb34710d092e96745a358b7"},
    {file = "pyasn1-0.4.8-py3.3.egg", hash = "sha256:03840c999ba71680a131cfaee6fab142e1ed9bbd9c693e285cc6aca0d555e576"},
    {file = "pyasn1-0.4.8-py3.4.egg", hash = "sha256:7ab8a544af125fb704feadb008c99a88805126fb525280b2270bb25cc1d78a12"},
    {file = "pyasn1-0.4.8-py3.5.egg", hash = "sha256:e89bf84b5437b532b0803ba5c9a5e054d21fec423a89952a74f87fa2c9b7bce2"},
    {file = "pyasn1-0.4.8-py3.6.egg", hash = "sha256:014c0e9976956a08139dc0712ae195324a75e142284d5f87f1a87ee1b068a359"},
    {file = "pyasn1-0.4.8-py3.7.egg", hash = "sha256:99fcc3c8d804d1bc6d9a099921e39d827026409a58f2a720dcdb89374ea0c776"},
    {file = "pyasn1-0.4.8.tar.gz", hash = "sha256:aef77c9fb94a3ac588e87841208bdec464471d9871bd5050a287cc9a475cd0ba"},
]
pycodestyle = [
    {file = "pycodestyle-2.6.0-py2.py3-none-any.whl", hash = "sha256:2295e7b2f6b5bd100585ebcb1f616591b652db8a741695b3d8f5d28bdc934367"},
    {file = "pycodestyle-2.6.0.tar.gz", hash = "sha256:c58a7d2815e0e8d7972bf1803331fb0152f867bd89adf8a01dfd55085434192e"},
]
pyflakes = [
    {file = "pyflakes-2.2.0-py2.py3-none-any.whl", hash = "sha256:0d94e0e05a19e57a99444b6ddcf9a6eb2e5c68d3ca1e98e90707af8152c90a92"},
    {file = "pyflakes-2.2.0.tar.gz", hash = "sha256:35b2d75ee967ea93b55750aa9edbbf72813e06a66ba54438df2cfac9e3c27fc8"},
]
pygments = [
    {file = "Pygments-2.7.3-py3-none-any.whl", hash = "sha256:f275b6c0909e5dafd2d6269a656aa90fa58ebf4a74f8fcf9053195d226b24a08"},
    {file = "Pygments-2.7.3.tar.gz", hash = "sha256:ccf3acacf3782cbed4a989426012f1c535c9a90d3a7fc3f16d231b9372d2b716"},
]
pyparsing = [
    {file = "pyparsing-2.4.7-py2.py3-none-any.whl", hash = "sha256:ef9d7589ef3c200abe66653d3f1ab1033c3c419ae9b9bdb1240a85b024efc88b"},
    {file = "pyparsing-2.4.7.tar.gz", hash = "sha256:c203ec8783bf771a155b207279b9bccb8dea02d8f0c9e5f8ead507bc3246ecc1"},
]
pytest = [
    {file = "pytest-6.2.1-py3-none-any.whl", hash = "sha256:1969f797a1a0dbd8ccf0fecc80262312729afea9c17f1d70ebf85c5e76c6f7c8"},
    {file = "pytest-6.2.1.tar.gz", hash = "sha256:66e419b1899bc27346cb2c993e12c5e5e8daba9073c1fbce33b9807abc95c306"},
]
pytest-cov = [
    {file = "pytest-cov-2.10.1.tar.gz", hash = "sha256:47bd0ce14056fdd79f93e1713f88fad7bdcc583dcd7783da86ef2f085a0bb88e"},
    {file = "pytest_cov-2.10.1-py2.py3-none-any.whl", hash = "sha256:45ec2d5182f89a81fc3eb29e3d1ed3113b9e9a873bcddb2a71faaab066110191"},
]
pytest-mock = [
    {file = "pytest-mock-3.4.0.tar.gz", hash = "sha256:c3981f5edee6c4d1942250a60d9b39d38d5585398de1bfce057f925bdda720f4"},
    {file = "pytest_mock-3.4.0-py3-none-any.whl", hash = "sha256:c0fc979afac4aaba545cbd01e9c20736eb3fefb0a066558764b07d3de8f04ed3"},
]
pytest-runner = [
    {file = "pytest-runner-5.2.tar.gz", hash = "sha256:96c7e73ead7b93e388c5d614770d2bae6526efd997757d3543fe17b557a0942b"},
    {file = "pytest_runner-5.2-py2.py3-none-any.whl", hash = "sha256:5534b08b133ef9a5e2c22c7886a8f8508c95bb0b0bdc6cc13214f269c3c70d51"},
]
python-dateutil = [
    {file = "python-dateutil-2.8.1.tar.gz", hash = "sha256:73ebfe9dbf22e832286dafa60473e4cd239f8592f699aa5adaf10050e6e1823c"},
    {file = "python_dateutil-2.8.1-py2.py3-none-any.whl", hash = "sha256:75bb3f31ea686f1197762692a9ee6a7550b59fc6ca3a1f4b5d7e32fb98e2da2a"},
]
pytz = [
    {file = "pytz-2020.4-py2.py3-none-any.whl", hash = "sha256:5c55e189b682d420be27c6995ba6edce0c0a77dd67bfbe2ae6607134d5851ffd"},
    {file = "pytz-2020.4.tar.gz", hash = "sha256:3e6b7dd2d1e0a59084bcee14a17af60c5c562cdc16d828e8eba2e683d3a7e268"},
]
pyyaml = [
    {file = "PyYAML-5.3.1-cp27-cp27m-win32.whl", hash = "sha256:74809a57b329d6cc0fdccee6318f44b9b8649961fa73144a98735b0aaf029f1f"},
    {file = "PyYAML-5.3.1-cp27-cp27m-win_amd64.whl", hash = "sha256:240097ff019d7c70a4922b6869d8a86407758333f02203e0fc6ff79c5dcede76"},
    {file = "PyYAML-5.3.1-cp35-cp35m-win32.whl", hash = "sha256:4f4b913ca1a7319b33cfb1369e91e50354d6f07a135f3b901aca02aa95940bd2"},
    {file = "PyYAML-5.3.1-cp35-cp35m-win_amd64.whl", hash = "sha256:cc8955cfbfc7a115fa81d85284ee61147059a753344bc51098f3ccd69b0d7e0c"},
    {file = "PyYAML-5.3.1-cp36-cp36m-win32.whl", hash = "sha256:7739fc0fa8205b3ee8808aea45e968bc90082c10aef6ea95e855e10abf4a37b2"},
    {file = "PyYAML-5.3.1-cp36-cp36m-win_amd64.whl", hash = "sha256:69f00dca373f240f842b2931fb2c7e14ddbacd1397d57157a9b005a6a9942648"},
    {file = "PyYAML-5.3.1-cp37-cp37m-win32.whl", hash = "sha256:d13155f591e6fcc1ec3b30685d50bf0711574e2c0dfffd7644babf8b5102ca1a"},
    {file = "PyYAML-5.3.1-cp37-cp37m-win_amd64.whl", hash = "sha256:73f099454b799e05e5ab51423c7bcf361c58d3206fa7b0d555426b1f4d9a3eaf"},
    {file = "PyYAML-5.3.1-cp38-cp38-win32.whl", hash = "sha256:06a0d7ba600ce0b2d2fe2e78453a470b5a6e000a985dd4a4e54e436cc36b0e97"},
    {file = "PyYAML-5.3.1-cp38-cp38-win_amd64.whl", hash = "sha256:95f71d2af0ff4227885f7a6605c37fd53d3a106fcab511b8860ecca9fcf400ee"},
    {file = "PyYAML-5.3.1.tar.gz", hash = "sha256:b8eac752c5e14d3eca0e6dd9199cd627518cb5ec06add0de9d32baeee6fe645d"},
]
requests = [
    {file = "requests-2.25.1-py2.py3-none-any.whl", hash = "sha256:c210084e36a42ae6b9219e00e48287def368a26d03a048ddad7bfee44f75871e"},
    {file = "requests-2.25.1.tar.gz", hash = "sha256:27973dd4a904a4f13b263a19c866c13b92a39ed1c964655f025f3f8d3d75b804"},
]
rsa = [
    {file = "rsa-4.5-py2.py3-none-any.whl", hash = "sha256:35c5b5f6675ac02120036d97cf96f1fde4d49670543db2822ba5015e21a18032"},
    {file = "rsa-4.5.tar.gz", hash = "sha256:4d409f5a7d78530a4a2062574c7bd80311bc3af29b364e293aa9b03eea77714f"},
]
s3transfer = [
    {file = "s3transfer-0.3.3-py2.py3-none-any.whl", hash = "sha256:2482b4259524933a022d59da830f51bd746db62f047d6eb213f2f8855dcb8a13"},
    {file = "s3transfer-0.3.3.tar.gz", hash = "sha256:921a37e2aefc64145e7b73d50c71bb4f26f46e4c9f414dc648c6245ff92cf7db"},
]
six = [
    {file = "six-1.15.0-py2.py3-none-any.whl", hash = "sha256:8b74bedcbbbaca38ff6d7491d76f2b06b3592611af620f8426e82dddb04a5ced"},
    {file = "six-1.15.0.tar.gz", hash = "sha256:30639c035cdb23534cd4aa2dd52c3bf48f06e5f4a941509c8bafd8ce11080259"},
]
smmap = [
    {file = "smmap-3.0.4-py2.py3-none-any.whl", hash = "sha256:54c44c197c819d5ef1991799a7e30b662d1e520f2ac75c9efbeb54a742214cf4"},
    {file = "smmap-3.0.4.tar.gz", hash = "sha256:9c98bbd1f9786d22f14b3d4126894d56befb835ec90cef151af566c7e19b5d24"},
]
snowballstemmer = [
    {file = "snowballstemmer-2.0.0-py2.py3-none-any.whl", hash = "sha256:209f257d7533fdb3cb73bdbd24f436239ca3b2fa67d56f6ff88e86be08cc5ef0"},
    {file = "snowballstemmer-2.0.0.tar.gz", hash = "sha256:df3bac3df4c2c01363f3dd2cfa78cce2840a79b9f1c2d2de9ce8d31683992f52"},
]
soupsieve = [
    {file = "soupsieve-2.1-py3-none-any.whl", hash = "sha256:4bb21a6ee4707bf43b61230e80740e71bfe56e55d1f1f50924b087bb2975c851"},
    {file = "soupsieve-2.1.tar.gz", hash = "sha256:6dc52924dc0bc710a5d16794e6b3480b2c7c08b07729505feab2b2c16661ff6e"},
]
sphinx = [
    {file = "Sphinx-3.3.1-py3-none-any.whl", hash = "sha256:d4e59ad4ea55efbb3c05cde3bfc83bfc14f0c95aa95c3d75346fcce186a47960"},
    {file = "Sphinx-3.3.1.tar.gz", hash = "sha256:1e8d592225447104d1172be415bc2972bd1357e3e12fdc76edf2261105db4300"},
]
sphinx-rtd-theme = [
    {file = "sphinx_rtd_theme-0.5.0-py2.py3-none-any.whl", hash = "sha256:373413d0f82425aaa28fb288009bf0d0964711d347763af2f1b65cafcb028c82"},
    {file = "sphinx_rtd_theme-0.5.0.tar.gz", hash = "sha256:22c795ba2832a169ca301cd0a083f7a434e09c538c70beb42782c073651b707d"},
]
sphinxcontrib-applehelp = [
    {file = "sphinxcontrib-applehelp-1.0.2.tar.gz", hash = "sha256:a072735ec80e7675e3f432fcae8610ecf509c5f1869d17e2eecff44389cdbc58"},
    {file = "sphinxcontrib_applehelp-1.0.2-py2.py3-none-any.whl", hash = "sha256:806111e5e962be97c29ec4c1e7fe277bfd19e9652fb1a4392105b43e01af885a"},
]
sphinxcontrib-devhelp = [
    {file = "sphinxcontrib-devhelp-1.0.2.tar.gz", hash = "sha256:ff7f1afa7b9642e7060379360a67e9c41e8f3121f2ce9164266f61b9f4b338e4"},
    {file = "sphinxcontrib_devhelp-1.0.2-py2.py3-none-any.whl", hash = "sha256:8165223f9a335cc1af7ffe1ed31d2871f325254c0423bc0c4c7cd1c1e4734a2e"},
]
sphinxcontrib-htmlhelp = [
    {file = "sphinxcontrib-htmlhelp-1.0.3.tar.gz", hash = "sha256:e8f5bb7e31b2dbb25b9cc435c8ab7a79787ebf7f906155729338f3156d93659b"},
    {file = "sphinxcontrib_htmlhelp-1.0.3-py2.py3-none-any.whl", hash = "sha256:3c0bc24a2c41e340ac37c85ced6dafc879ab485c095b1d65d2461ac2f7cca86f"},
]
sphinxcontrib-jsmath = [
    {file = "sphinxcontrib-jsmath-1.0.1.tar.gz", hash = "sha256:a9925e4a4587247ed2191a22df5f6970656cb8ca2bd6284309578f2153e0c4b8"},
    {file = "sphinxcontrib_jsmath-1.0.1-py2.py3-none-any.whl", hash = "sha256:2ec2eaebfb78f3f2078e73666b1415417a116cc848b72e5172e596c871103178"},
]
sphinxcontrib-qthelp = [
    {file = "sphinxcontrib-qthelp-1.0.3.tar.gz", hash = "sha256:4c33767ee058b70dba89a6fc5c1892c0d57a54be67ddd3e7875a18d14cba5a72"},
    {file = "sphinxcontrib_qthelp-1.0.3-py2.py3-none-any.whl", hash = "sha256:bd9fc24bcb748a8d51fd4ecaade681350aa63009a347a8c14e637895444dfab6"},
]
sphinxcontrib-serializinghtml = [
    {file = "sphinxcontrib-serializinghtml-1.1.4.tar.gz", hash = "sha256:eaa0eccc86e982a9b939b2b82d12cc5d013385ba5eadcc7e4fed23f4405f77bc"},
    {file = "sphinxcontrib_serializinghtml-1.1.4-py2.py3-none-any.whl", hash = "sha256:f242a81d423f59617a8e5cf16f5d4d74e28ee9a66f9e5b637a18082991db5a9a"},
]
structlog = [
    {file = "structlog-19.2.0-py2.py3-none-any.whl", hash = "sha256:6640e6690fc31d5949bc614c1a630464d3aaa625284aeb7c6e486c3010d73e12"},
    {file = "structlog-19.2.0.tar.gz", hash = "sha256:4287058cf4ce1a59bc5dea290d6386d37f29a37529c9a51cdf7387e51710152b"},
]
toml = [
    {file = "toml-0.10.2-py2.py3-none-any.whl", hash = "sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b"},
    {file = "toml-0.10.2.tar.gz", hash = "sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f"},
]
typing-extensions = [
    {file = "typing_extensions-3.7.4.3-py2-none-any.whl", hash = "sha256:dafc7639cde7f1b6e1acc0f457842a83e722ccca8eef5270af2d74792619a89f"},
    {file = "typing_extensions-3.7.4.3-py3-none-any.whl", hash = "sha256:7cb407020f00f7bfc3cb3e7881628838e69d8f3fcab2f64742a5e76b2f841918"},
    {file = "typing_extensions-3.7.4.3.tar.gz", hash = "sha256:99d4073b617d30288f569d3f13d2bd7548c3a7e4c8de87db09a9d29bb3a4a60c"},
]
urllib3 = [
    {file = "urllib3-1.26.2-py2.py3-none-any.whl", hash = "sha256:d8ff90d979214d7b4f8ce956e80f4028fc6860e4431f731ea4a8c08f23f99473"},
    {file = "urllib3-1.26.2.tar.gz", hash = "sha256:19188f96923873c92ccb987120ec4acaa12f0461fa9ce5d3d0772bc965a39e08"},
]
waitress = [
    {file = "waitress-1.4.4-py2.py3-none-any.whl", hash = "sha256:3d633e78149eb83b60a07dfabb35579c29aac2d24bb803c18b26fb2ab1a584db"},
    {file = "waitress-1.4.4.tar.gz", hash = "sha256:1bb436508a7487ac6cb097ae7a7fe5413aefca610550baf58f0940e51ecfb261"},
]
webob = [
    {file = "WebOb-1.8.6-py2.py3-none-any.whl", hash = "sha256:a3c89a8e9ba0aeb17382836cdb73c516d0ecf6630ec40ec28288f3ed459ce87b"},
    {file = "WebOb-1.8.6.tar.gz", hash = "sha256:aa3a917ed752ba3e0b242234b2a373f9c4e2a75d35291dcbe977649bd21fd108"},
]
webtest = [
    {file = "WebTest-2.0.35-py2.py3-none-any.whl", hash = "sha256:44ddfe99b5eca4cf07675e7222c81dd624d22f9a26035d2b93dc8862dc1153c6"},
    {file = "WebTest-2.0.35.tar.gz", hash = "sha256:aac168b5b2b4f200af4e35867cf316712210e3d5db81c1cbdff38722647bb087"},
]
zipp = [
    {file = "zipp-3.4.0-py3-none-any.whl", hash = "sha256:102c24ef8f171fd729d46599845e95c7ab894a4cf45f5de11a44cc7444fb1108"},
    {file = "zipp-3.4.0.tar.gz", hash = "sha256:ed5eee1974372595f9e416cc7bbeeb12335201d8081ca8a0743c954d4446e5cb"},
]
